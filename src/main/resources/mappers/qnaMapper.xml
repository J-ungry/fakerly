<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.joongbu.fakerly.mapper.QnaMapper">
	<resultMap type="QnaDto" id="QnaMap">
		<id column="qa_no" property="qaNo"/>
		<result column="title" property="title"/>	
		<result column="contents" property="contents"/>	
		<result column="code" property="code"/>	
		<result column="q_datetime" property="qaTime"/>		
		<result column="views" property="views"/>
		<result column="qa_resolve" property="qa_resolve"/>	
		<result column="likes" property="likes"/>
		<result column="qa_side" property="qa_side"/>
		<association property="user" foreignColumn="user_no">
  		<id column="user_no" property="user_no"/> 
  		<result column="nickname" property="nickname"/>
  		</association>
  		
  		<!-- collection.select : board 출력할때 select를 한번 더 호출(==join) -->
		<!-- fetchType="lazy"(게으른 연산) : toString,equals,get... 
								호출이 없으면 collection.select를 하지 않는다. -->
  		<collection property="qaImgList"
			select="com.joongbu.fakerly.mapper.QnaImgMapper.qaImgList"
			column="qa_no" fetchType="lazy">
		</collection>
		<!--   		<association property="qroles" foreignColumn="qa_no">
  		<id column="qa_name" property="qa_name"/> 
  		</association> -->
		<!-- 		<result column="user_no" property="user_no"/>	
		<result column="nickname" property="nickname"/>  -->
		<collection property="qareplyList" ofType="QnaReply">
			<id column="qa_reply_no" property="qa_reply_no"/>
			<result column="qr_contents" property="contents"/>
			<result column="qr_datetime" property="q_datetime"/>
			<result column="qr_code" property="code"/>
			<result column="qr_user_no" property="user_no"/>
			<result column="qr_no" property="qa_no"/>
		</collection>

	</resultMap>
	<select id="qalist" resultMap="QnaMap">
		select * ,
		(SELECT COUNT(*) FROM qna_like l where l.qa_no=q.qa_no) likes
		FROM qna q
		LEFT JOIN user using(user_no)

		
	</select>

	
	<select id="qadetail" resultMap="QnaMap">
		select q.* ,
		(SELECT COUNT(*) FROM qna_like l where l.qa_no=q.qa_no) likes,
		qr.qa_reply_no,
		qr.contents qr_contents,
		qr.q_datetime qr_datetime,
		qr.code qr_code,
		qr.user_no qr_user_no,
		qr.qa_no qr_no
		FROM qna q
		LEFT JOIN user u using(user_no) 
		LEFT JOIN qna_reply qr using(qa_no)
		WHERE qa_no=#{qaNo}
	</select>
	
	

	
	<!--  useGeneratedKeys="true" keyProperty="qaNo" : 파라미터로 넘어온 QnaDto에 qaNo가 넘어온다. -->
		
	<insert id="qainsert" parameterType="QnaDto"
	useGeneratedKeys="true" keyProperty="qaNo">
		INSERT INTO qna
			(title, contents, code, qa_resolve,qa_side,user_no)
			VALUES
			(#{title},#{contents},#{code},#{qa_resolve},#{qa_side},#{user.user_no})	
	</insert>  
	
	<update id="qaupdate" parameterType="QnaDto">
		UPDATE QNA SET
			title=#{title},
			contents=#{contents},
			code=#{code},
			qa_resolve=#{qa_resolve},
			qa_side=#{qa_side}
			WHERE qa_no=#{qaNo}
	</update>
	<delete id="qadelete">
		DELETE FROM QNA
			WHERE qa_no=#{qaNo}
	</delete>
  </mapper>